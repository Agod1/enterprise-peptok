services:
  postgres:
    image: postgres:15-alpine
    container_name: peptok-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: peptok_dev
      POSTGRES_USER: peptok_user
      POSTGRES_PASSWORD: peptok_password
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend-nestjs/sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U peptok_user -d peptok_dev"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - peptok-network

  redis:
    image: redis:7-alpine
    container_name: peptok-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - peptok-network

  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: peptok-frontend
    restart: unless-stopped
    ports:
      - "8080:80"
    depends_on:
      - backend
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost/",
        ]
      interval: 30s
      timeout: 3s
      start_period: 5s
      retries: 3
    networks:
      - peptok-network

  backend:
    build:
      context: ./backend-nestjs
      dockerfile: Dockerfile
    container_name: peptok-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_USER: peptok_user
      DATABASE_PASSWORD: peptok_password
      DATABASE_NAME: peptok_dev
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      PORT: 3000
    ports:
      - "3001:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
        healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/v1/health"]
      interval: 30s
      timeout: 10s
      start_period: 30s
      retries: 3
    networks:
      - peptok-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  peptok-network:
    driver: bridge
